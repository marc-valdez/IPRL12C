#include "Valdez_FileProcessingMP1.h"
#include "Valdez_FileProcessingMP2.h"
#include "Valdez_FileProcessingMP3.h"
#include "Valdez_FileProcessingMP4.h"
#include "Valdez_FileProcessingMP5.h"
#include "Valdez_FileProcessingMP6.h"

void fileprocessing_MEs()
{
    char *menu_items[] = {
        "Write a program that will output the characters A to Z (one character per line) onto a text file whose filename is specified by the user.",
        "Write a program that will read the text stored in the file generated by the program in the previous exercise.",
        "Write a program that asks the user to input two integers, then print all integers from n1 to n2 on to a text file.",
        "Write a program that will read the integers from the file generated in the previous exercise.",
        "Write a program that will count the number of vowel letters in a text file.",
        "Write a program that will determine whether these two text files are identical or not (i.e., the contents are the same.)"
    };
    int max = sizeof(menu_items) / sizeof(menu_items[0]);

    while(1)
    {
        system("cls");
        printf("=====================================================================\n");
        printf("File Processing Machine Exercises | [0] Go back | [-1] Exit\n");
        for(int i = 0; i < max; i++)
            printf("  [%d] %s\n", i + 1, menu_items[i]);

        int choice, min = -1;
        get_int(&choice, min, max, "> Please select an option: ");

        system("cls");
        switch(choice)
        {
            case -1: {
                char answer = yes_or_no("Are you sure you want to exit? (y/n): ");
                if(answer == 'N' || answer == 'n')
                    continue;
                exit_prompt("Thank you for using this program!\n");
                break;
            }
            case 0: {
                char answer = yes_or_no("Return to previous menu? (y/n): ");
                if(answer == 'N' || answer == 'n')
                    continue;
                return;
            }
            case 1: fp_exer1(); break;
            case 2: fp_exer2(); break;
            case 3: fp_exer3(); break;
            case 4: fp_exer4(); break;
            case 5: fp_exer5(); break;
            case 6: fp_exer6(); break;
        }
        system("pause");
    }
}